type Customer {
  id: Float!
  lastUpdated: DateTime!
  email: String!
  phone: String!
  shipments(limit: Int = 10, offset: Int = 0): [Shipment!]
  statistics(limit: Int = 10, offset: Int = 0): [statistics!]
}

"An RFC-3339 compliant DateTime Scalar"
scalar DateTime

"An arbitrary precision signed integer"
scalar GraphQLBigInteger

type Query {
  Shipment(id: GraphQLBigInteger!, limit: Int = 10, offset: Int = 0): [Shipment!]
  Vehicle(limit: Int = 10, offset: Int = 0): [Vehicle!]
  Customer(email: String, id: GraphQLBigInteger, limit: Int = 10, offset: Int = 0): [Customer!]
}

type Shipment {
  id: GraphQLBigInteger!
  lastUpdated: DateTime!
  origin: String!
  lat: Float!
  lon: Float!
  weight: Float!
  estimatedDelivery: DateTime!
  customerId: Float!
  locations(limit: Int = 10, offset: Int = 0): [Shipment_Location!]
}

type Shipment_Location {
  timestamp: DateTime!
  shipmentId: Float!
  vehicleId: Float!
  vehicle_statuses(limit: Int = 10, offset: Int = 0): [Vehicle_Status!]
}

type Vehicle {
  id: Float!
  type: String!
  capacity: Float!
}

type Vehicle_Status {
  timestamp: DateTime!
  lat: Float!
  lon: Float!
  vehicleId: Float!
}

type statistics {
  shipment_count: Float!
}
