type Customer {
  id: Float!
  lastUpdated: DateTime!
  email: String!
  phone: String!
  shipments(limit: Int = 10, offset: Int = 0): [Shipment!]
  statistics(limit: Int = 10, offset: Int = 0): [Statistics!]
}

"An RFC-3339 compliant DateTime Scalar"
scalar DateTime

"A 64-bit signed integer"
scalar Long

type Query {
  Shipment(id: Long!, limit: Int = 10, offset: Int = 0): [Shipment!]
  Vehicle(limit: Int = 10, offset: Int = 0): [Vehicle!]
  Customer(email: String, id: Long, limit: Int = 10, offset: Int = 0): [Customer!]
}

type Shipment {
  id: Long!
  lastUpdated: DateTime!
  origin: String!
  lat: Float!
  lon: Float!
  weight: Float!
  estimatedDelivery: DateTime!
  customerId: Float!
  locations(limit: Int = 10, offset: Int = 0): [ShipmentLocation!]
}

type ShipmentLocation {
  timestamp: DateTime!
  shipmentId: Float!
  vehicleId: Float!
  vehicleStatuses(limit: Int = 10, offset: Int = 0): [VehicleStatus!]
}

type Vehicle {
  id: Float!
  type: String!
  capacity: Float!
}

type VehicleStatus {
  timestamp: DateTime!
  lat: Float!
  lon: Float!
  vehicleId: Float!
}

type Statistics {
  shipmentCount: Float!
}
