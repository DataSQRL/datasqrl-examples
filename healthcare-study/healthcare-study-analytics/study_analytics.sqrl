IMPORT study-testdata.* AS _CDC_;
IMPORT metrics-testdata.clinical_indicator AS _ClinicalIndicator;

_SensorPlacements := DISTINCT _CDC_SensorPlacements ON sensorId ORDER BY placedTimestamp DESC;
_Metadata := DISTINCT _CDC_Metadata ON metadataId ORDER BY lastUpdated DESC;
_Patients := DISTINCT _CDC_Patients ON patientId ORDER BY lastUpdated DESC;

_EnrichedIndicators := SELECT * FROM _ClinicalIndicator m
    JOIN _SensorPlacements FOR SYSTEM_TIME AS OF m.`timestamp` p ON m.sensorId = p.sensorId
    JOIN _Metadata  FOR SYSTEM_TIME AS OF m.`timestamp` d ON d.metadataId = p.metadataId
    JOIN _Patients  FOR SYSTEM_TIME AS OF m.`timestamp` pt ON p.patientId = pt.patientId;

/*+primary_key(studyId, patientId, metadataId, name, timeHour), partition_key(studyId) */
_PatientMetricsHourly := SELECT studyId, patientId, window_time AS timeHour, metadataId, name,
                         avg(metric) as avgMetric
            FROM TABLE(TUMBLE(TABLE _EnrichedIndicators, DESCRIPTOR(`timestamp`), INTERVAL '1' HOUR))
            GROUP BY studyId, patientId, metadataId, name, window_start, window_end, window_time;

_ObservationGroup := DISTINCT _CDC_ObservationGroup ON groupId ORDER BY createdDate DESC;

/*+primary_key(groupId, patientId), partition_key */
_ObservationGroupMembership := SELECT groupId, groupName, studyId, p.patientId FROM _ObservationGroup g CROSS JOIN UNNEST(g.patients) p(patientId);

ObservationAggregate := SELECT groupId, timeHour, metadataId, name, MIN(avgMetric) AS minMetric, MAX(avgMetric) AS maxMetric
                        FROM _PatientMetricsHourly p JOIN _ObservationGroupMembership o ON p.studyId = o.studyId AND p.patientId = o.patientId
                        GROUP BY groupId, timeHour, metadataId, name;

/*+test */
ObservationAggregateTest := SELECT groupId, timeHour, metadataId, COUNT(1) AS num FROM ObservationAggregate
                       GROUP BY groupId, timeHour, metadataId ORDER BY groupId ASC, timeHour DESC, metadataId ASC;

/*+test */
ObservationAggregateSummaryTest := SELECT groupId, metadataId, COUNT(1) AS num FROM ObservationAggregate
                            GROUP BY groupId, metadataId ORDER BY groupId ASC, metadataId ASC;
