"An RFC-3339 compliant DateTime Scalar"
scalar DateTime

type Query {
  """
  Returns information about the well/asset including it's maintenance records, manual,
  description, and other important information.
  """
  Assets(asset_id: Int!, limit: Int = 20, offset: Int = 0): [Assets!]
  """
  Returns the flowrate readings for a given well/asset within the specified range order by timestamp decreasing.
  """
  FlowRateByRange(assetId: Int!, minRate: Float = 0, maxRate: Float = 10000): [EnrichedFlowRate!]
  """
  Returns recent pressure and temperature readings for a given well/asset by id.
  """
  RecentPressure(assetId: Int!, limit: Int = 25, offset: Int = 0): [RecentPressure!]
}

type Subscription {
  LowFlowRate: EnrichedFlowRate
}

type RecentPressure {
  assetId: Int!
  timestamp_normalized: DateTime!
  pressure_psi: Float!
  temperature_f: Float!
}

type Assets {
  asset_id: Int!
  asset_number: String!
  asset_name: String!
  asset_category_id: Int!
  description: String!
  date_placed_in_service: String!
  asset_cost: Float!
  status: String!
  asset_manual: String!
  lastUpdated: DateTime!
  maintenance: [Maintenance!]
}

type Maintenance {
  work_order_id: Int!
  work_order_num: String!
  asset_id: Int!
  description: String!
  wo_type: String!
  priority: String!
  status: String!
  request_date: String!
  start_date: String
  completion_date: String
  lastUpdated: DateTime!
}

type EnrichedFlowRate {
  assetId: Int!
  flowrate: Float!
  event_time: DateTime!
  asset_number: String!
  asset_name: String!
  description: String!
}

input FlowRateInput {
  assetId: Int!
  flowrate: Float!
}

type FlowRateResult {
  assetId: Int!
  flowrate: Float!
  event_time: DateTime!
}

type Mutation {
  AddFlowRate(event: FlowRateInput!): FlowRateResult!
}