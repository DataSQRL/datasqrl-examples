name: helm-chart-integration-test

'on': 
  workflow_dispatch:
    inputs:
      tf_script_dir:
        description: Path to directory where terraform scripts are stored
        required: false
        default: "datasqrl-examples/finance-credit-card-chatbot/mock_tf_build_deploy"
      sqrl_image_version:
        description: Version of sqrl compile
        required: false
        default: "v0.5.2"


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REPOSITORY_NAME: datasqrl-examples
  EXAMPLE_NAME: finance-credit-card-chatbot
  DEPLOYMENT_PACKAGE_NAME: package-analytics-no-chat
  # ECR_REPOSITORY_SERVER: "datasqrl-examples/$EXAMPLE_NAME/$DEPLOYMENT_PACKAGE_NAME/deploy-server"

  ARTIFACTORY_S3_BUCKET_NAME: "sqrl-examples-artifactory-dev"
  # docker
  DOCKER_IMAGE: "public.ecr.aws/j5u7a3j2/datasqrl/cloud:latest"
  DOCKER_COMMAND: "docker run --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --env AWS_SESSION_TOKEN --env AWS_REGION --env BACKEND_S3_BUCKET --env BACKEND_S3_KEY -v ~/.ssh:/root/.ssh -v $(pwd):/mnt/host -v /var/run/docker.sock:/var/run/docker.sock public.ecr.aws/j5u7a3j2/datasqrl/cloud:latest"
  # terraform
  TF_S3_BACKEND_BUCKET_NAME: "sqrl-examples-artifactory-dev"
  TF_S3_BACKEND_DEFAULT_REGION: "us-east-1"
  TF_S3_BACKEND_KEY: "datasqrl-examples/finance-credit-card-chatbot/package-analytics-no-chat/terraform/terraform.tfstate"


jobs:
  build-artifacts:
    name: "Build Artifacts"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    env:
      ENV: DEV
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEV_GITHUB_ACTION_ROLE }}
          aws-region: us-east-1

      - name: Getting Code
        uses: actions/checkout@v3

      - name: SQRL Compile
        working-directory: ${{ env.EXAMPLE_NAME }}
        run: |
          echo "${{ github.workspace }}"
          docker run --rm -v $PWD:/build datasqrl/cmd:"${{ inputs.sqrl_image_version }}" compile -c "${{ env.DEPLOYMENT_PACKAGE_NAME }}.json"
        shell: bash
      
      - name: Build Docker Images
        working-directory: "${{ env.EXAMPLE_NAME }}/build/deploy"
        run: |
          docker compose build
          ls -la
        shell: bash


  deploy:
    name: "Deploy Terraform Stack"
    needs: build-artifacts
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    env:
      ENV: DEV
    steps:
      - name: Getting Code
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEV_GITHUB_ACTION_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name datasqrl-cloud
          cat ~/.kube/config

      - name: Deploy to EKS
        uses: actions-hub/kubectl@master
        with:
          args: get ns

  #     - name: Fetch Artifacts
  #       working-directory: ${{ env.EXAMPLE_NAME }}
  #       run: |
  #         aws s3 cp s3://${ARTIFACTORY_S3_BUCKET_NAME}/${REPOSITORY_NAME}/${EXAMPLE_NAME}/${DEPLOYMENT_PACKAGE_NAME}/database-schema.sql  ./mock_tf_build_deploy
  #         aws s3 cp s3://${ARTIFACTORY_S3_BUCKET_NAME}/${REPOSITORY_NAME}/${EXAMPLE_NAME}/${DEPLOYMENT_PACKAGE_NAME}/FlinkJob.jar ./mock_tf_build_deploy/
  #         # load local data
  #         cp -r ./creditcard-local ./mock_tf_build_deploy

  #         ls -la ./mock_tf_build_deploy
  #       shell: bash
      
  #     - name: Set up SSH to sqrl-cloud repo
  #       working-directory: "${{ env.EXAMPLE_NAME }}"
  #       id: ssh_setup
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa
  #         ssh-keyscan github.com >> ~/.ssh/known_hosts
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY_SQRL_CLOUD }}
      
  #     - name: Pull datasqrl/cloud Image
  #       id: pull-datasqrl-cloud
  #       run: |
  #           docker pull ${{ env.DOCKER_IMAGE }}
  #       shell: bash
      
  #     - name: Integration Testing
  #       id: test
  #       run: |
  #         git clone git@github.com:DataSQRL/sqrl-cloud.git
  #         cd sqrl-cloud
  #         pip install poetry
  #         poetry install
  #         poetry run pytest tests/integration/test_service_availability.py --alb ${{ env.server_alb_dns_name }}
  #       shell: bash