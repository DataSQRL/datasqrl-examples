name: destroy-terraform-stack

'on': 
  workflow_dispatch:
    inputs:
      tf_script_dir:
        description: Path to directory where terraform scripts are stored
        required: false
        default: "datasqrl-examples/finance-credit-card-chatbot/mock_tf_build_deploy"

env:
  EXAMPLE_NAME: finance-credit-card-chatbot
  DEPLOYMENT_PACKAGE_NAME: package-analytics-no-chat
  
  DOCKER_COMMAND: "docker run --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --env AWS_SESSION_TOKEN --env AWS_REGION --env BACKEND_S3_BUCKET --env BACKEND_S3_KEY -v ~/.ssh:/root/.ssh -v $(pwd):/mnt/host -v /var/run/docker.sock:/var/run/docker.sock public.ecr.aws/j5u7a3j2/datasqrl/cloud:latest"
    # terraform
  TF_S3_BACKEND_BUCKET_NAME: "sqrl-examples-artifactory-dev"
  TF_S3_BACKEND_DEFAULT_REGION: "us-east-1"
  TF_S3_BACKEND_KEY: "datasqrl-examples/$EXAMPLE_NAME/$DEPLOYMENT_PACKAGE_NAME/terraform/terraform.tfstate"


jobs:
  destroy_tf_stack:
    name: DestroyInfrastructure
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    env:
      ENV: DEV
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: '${{ secrets.AWS_DEV_GITHUB_ACTION_ROLE }}'
          aws-region: us-east-1
      - name: Getting Code
        uses: actions/checkout@v3
      - name: Set up SSH
        id: ssh_setup
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: '${{ secrets.SSH_KEY_SQRL_CLOUD }}'
      - name: Terraform Destroy
        id: apply
        env:
          BACKEND_S3_BUCKET: ${{ env.TF_S3_BACKEND_BUCKET_NAME }}
          BACKEND_S3_KEY: ${{ env.TF_S3_BACKEND_KEY }}
          AWS_REGION:  ${{ env.TF_S3_BACKEND_DEFAULT_REGION  }}
        run: |
          cd "/home/runner/work/datasqrl-examples/${{ inputs.tf_script_dir }}"
          # mock up artifacts for destroy command
          touch FlinkJob.jar
          touch database-schema.sql

          ${{ env.DOCKER_COMMAND }} tf-destroy
        shell: bash